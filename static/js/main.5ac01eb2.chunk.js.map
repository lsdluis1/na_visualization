{"version":3,"sources":["components/toggleSwitch.js","api/parsePoints.js","drawing/drawFunctionPoints.js","components/floatingPoint.js","canvas/pointCanvas.jsx","pointSetter.js","index.js"],"names":["Toggle","props","toggle","useRef","checkbox","ref","name","className","type","defaultChecked","value","onClick","onChange","current","checked","classList","onToggle","positionParser","array","pathPoints","i","length","push","x","y","drawFunctionPoints","ctx","points","style","color","width","sort","a","b","beginPath","map","point","index","nextPoint","moveTo","lineTo","strokeStyle","lineWidth","stroke","FloatingPoint","initialPosition","useMemo","position","initialAnimationFrameCount","animationFrameCount","animationDisplacementRef","useState","deltaX","deltaY","lastX","lastY","dragData","setDragData","updatePivotalPoint","key","animationDisplacement","_","isUndefined","newPoint","handleDrag","animated","animation","useEffect","pointStyle","pointSize","onDrag","_event","left","top","height","borderRadius","background","opacity","PointCanvas","canvasRef","draw","lineStyle","canvasStyle","context","getContext","clearRect","canvas","fillStyle","arc","Math","PI","fill","drawCoordinates","PositionSetter","setAnimationFrameCount","interval","setInterval","prev","clearInterval","onDoubleClick","handleDoubleClick","pivotalPoints","plotPoints","path","pivotal","App","setAnimated","pivotalP","setPivotalP","plotP","setPlotP","plotPosition","rootElement","getAttribute","plotPositionParsed","JSON","parse","handleDragRef","draggedPoint","updateIndex","findIndex","p","handleDoubleClickRef","random","toString","testString","ReactCursorPosition","cos","sin","document","getElementById","setAttribute","concat","stringify","ReactDOM","render"],"mappings":"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","file":"static/js/main.5ac01eb2.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./toggleSwitch.css\";\nToggle.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n};\nexport default function Toggle(props) {\n  const toggle = useRef();\n  const checkbox = useRef();\n  function handleToggle() {\n    if (props.onChange) props.onChange(checkbox.current.checked);\n    toggle.current.classList.toggle(\"toggled\");\n    checkbox.current.checked = !checkbox.current.checked;\n    if (props.onToggle) props.onToggle(checkbox.current.checked);\n  }\n  return (\n    <>\n      <input\n        ref={checkbox}\n        name={props.name}\n        className=\"toggle-checkbox\"\n        type=\"checkbox\"\n        defaultChecked={props.value}\n        value={props.value || false}\n      />\n      <span\n        ref={toggle}\n        onClick={handleToggle}\n        className={props.checked ? \"toggled toggle-switch\" : \"toggle-switch\"}\n      >\n        <span className=\"toggle\"></span>\n      </span>\n    </>\n  );\n}\n","export function positionParser(array) {\n  const pathPoints = [];\n\n  for (let i = 0; i < array.length / 2; i++) {\n    pathPoints.push({\n      x: array[2 * i],\n      y: array[2 * i + 1],\n    });\n  }\n\n  return pathPoints;\n}\n","const drawFunctionPoints = (ctx, points, style) => {\n  const { color = \"black\", width = 1 } = style;\n\n  function sort_function(a, b) {\n    if (a.x > b.x) return 1;\n    if (a.x < b.x) return -1;\n    if (a.y > b.y) return 1;\n    if (a.y < b.y) return -1;\n  }\n  points.sort(sort_function);\n\n  if (points.length > 1) {\n    ctx.beginPath();\n    points.map((point, index) => {\n      if (index >= points.length - 1) {\n        return;\n      }\n      const nextPoint = points[index + 1];\n      ctx.moveTo(point.x, point.y);\n      ctx.lineTo(nextPoint.x, nextPoint.y);\n    });\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n};\n\nexport default drawFunctionPoints;\n","import React, { useMemo, useEffect, useRef, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport _ from \"lodash\";\n\nexport default function FloatingPoint(props) {\n  const initialPosition = useMemo(() => props.point.position, []);\n  const initialAnimationFrameCount = useMemo(\n    () => props.animationFrameCount,\n    []\n  );\n  const animationDisplacementRef = useRef();\n\n  const [dragData, setDragData] = useState({\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    deltaY: 0,\n    lastX: 0,\n    lastY: 0,\n  });\n\n  const updatePivotalPoint = () => {\n    const { key } = props.point;\n    const animationDisplacement = _.isUndefined(\n      animationDisplacementRef.current\n    )\n      ? { x: 0, y: 0 }\n      : animationDisplacementRef.current;\n\n    const newPosition = {\n      x: initialPosition.x + animationDisplacement.x + dragData.x,\n      y: initialPosition.y + animationDisplacement.y + dragData.y,\n    };\n    const newPoint = { key, position: newPosition };\n    props.handleDrag(newPoint);\n  };\n\n  const { animated, animation, animationFrameCount } = props;\n\n  useEffect(() => {\n    if (animated) {\n      animationDisplacementRef.current = animation(\n        animationFrameCount - initialAnimationFrameCount\n      );\n      updatePivotalPoint();\n    }\n  }, [animationFrameCount]);\n\n  const handleDrag = (_event, dragData) => {\n    setDragData(dragData);\n    updatePivotalPoint();\n  };\n\n  const { pointSize, color } = props.pointStyle;\n  const animationDisplacement = _.isUndefined(animationDisplacementRef.current)\n    ? { x: 0, y: 0 }\n    : animationDisplacementRef.current;\n\n  return (\n    <Draggable onDrag={handleDrag}>\n      <div\n        className=\"drag-wrapper\"\n        style={{\n          position: \"absolute\",\n          left: initialPosition.x + animationDisplacement.x - pointSize,\n          top: initialPosition.y + animationDisplacement.y - pointSize,\n          width: 2 * pointSize,\n          height: 2 * pointSize,\n          borderRadius: \"100%\",\n          background: color,\n          opacity: 0,\n        }}\n      ></div>\n    </Draggable>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport \"./pointCanvas.css\";\n\nfunction drawCoordinates(ctx, x, y, pointStyle) {\n  const { color = \"#ff2626\", pointSize = 10 } = pointStyle;\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.arc(x, y, pointSize, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.stroke();\n}\n\nfunction PointCanvas(props) {\n  const canvasRef = useRef(null);\n  const {\n    draw,\n    pathPoints,\n    points,\n    pointStyle,\n    lineStyle,\n    canvasStyle,\n  } = props;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    draw(context, pathPoints, lineStyle);\n    points.map((point) => {\n      drawCoordinates(context, point.x, point.y, pointStyle);\n    });\n  }, [points, pathPoints]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={canvasStyle.width}\n      height={canvasStyle.height}\n      {...props}\n    />\n  );\n}\n\nexport default PointCanvas;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport drawFunctionPoints from \"./drawing/drawFunctionPoints\";\nimport FloatingPoint from \"./components/floatingPoint\";\nimport PointCanvas from \"./canvas/pointCanvas\";\nimport _ from \"lodash\";\n\nexport default function PositionSetter(props) {\n  const appendPoint = () => {\n    const { position } = props;\n    props.handleDoubleClick(position);\n  };\n\n  const [animationFrameCount, setAnimationFrameCount] = useState(0);\n\n  const { animated, animation, lineWidth, style } = props;\n  const { pointSize } = style;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (animated) {\n        setAnimationFrameCount((prev) => prev + 1);\n      }\n    }, 1000 / 60);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [animated]);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        background: \"skyblue\",\n      }}\n      onDoubleClick={appendPoint}\n    >\n      {props.pivotalPoints.map((point) => {\n        return (\n          <FloatingPoint\n            animated={animated}\n            animation={animation}\n            animationFrameCount={animationFrameCount}\n            handleDrag={props.handleDrag}\n            point={point}\n            pointStyle={{ pointSize: 10, color: \"yellow\" }}\n          />\n        );\n      })}\n      <PointCanvas\n        draw={drawFunctionPoints}\n        pathPoints={props.plotPoints.path}\n        points={props.plotPoints.pivotal}\n        lineStyle={{ color: \"black\", width: lineWidth }}\n        pointStyle={{ color: \"red\", pointSize: pointSize }}\n        canvasStyle={{ width: 1600, height: 1000 }}\n      />\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport ReactCursorPosition from \"react-cursor-position\";\nimport Toggle from \"./components/toggleSwitch\";\nimport _ from \"lodash\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { positionParser } from \"./api/parsePoints\";\n\nimport \"./styles.css\";\nimport PositionSetter from \"./pointSetter\";\n\nconst pivotalPoints = [];\n\nfunction App(props) {\n  const [animated, setAnimated] = useState(false);\n  const [pivotalP, setPivotalP] = useState([]);\n  const [plotP, setPlotP] = useState({ path: [], pivotal: [] });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPivotalP([...pivotalPoints]);\n      const plotPosition = rootElement.getAttribute(\"plotPosition\");\n      const plotPositionParsed =\n        plotPosition == null\n          ? { path: [], pivotal: [] }\n          : JSON.parse(plotPosition);\n      plotPositionParsed.path = positionParser(plotPositionParsed.path);\n      plotPositionParsed.pivotal = positionParser(plotPositionParsed.pivotal);\n      setPlotP(plotPositionParsed);\n    }, 1000 / 60);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const handleDragRef = useRef();\n  handleDragRef.current = (draggedPoint) => {\n    const updateIndex = _.findIndex(\n      pivotalPoints,\n      (p) => p.key === draggedPoint.key\n    );\n    pivotalPoints[updateIndex] = draggedPoint;\n  };\n\n  const handleDoubleClickRef = useRef();\n  handleDoubleClickRef.current = (position) => {\n    const MAX_POINT_NUM = 100;\n    const key = Math.random().toString(36);\n    if (pivotalPoints.length < MAX_POINT_NUM) {\n      pivotalPoints.push({ position, key });\n    }\n  };\n\n  return (\n    <div>\n      {props.testString}\n      <Toggle onToggle={setAnimated} />\n      <ReactCursorPosition style={{ position: \"absolute\" }}>\n        <PositionSetter\n          style={{ pointSize: 10, lineWidth: 5 }}\n          animated={animated}\n          animation={(animationFrameCount) => ({\n            x: 100 * Math.cos(animationFrameCount * (Math.PI / 100)) - 100,\n            y: 100 * Math.sin(animationFrameCount * (Math.PI / 100)),\n          })}\n          handleDoubleClick={handleDoubleClickRef.current}\n          handleDrag={handleDragRef.current}\n          pivotalPoints={pivotalP}\n          plotPoints={plotP === null ? [] : plotP}\n        />\n      </ReactCursorPosition>\n    </div>\n  );\n}\nconst rootElement = document.getElementById(\"root\");\nvar testString = null;\n\nsetInterval(() => {\n  const str = \"\";\n  rootElement.setAttribute(\n    \"pivotalPosition\",\n    str.concat(\n      \"[\",\n      pivotalPoints\n        .map((point) => JSON.stringify([point.position.x, point.position.y]))\n        .toString(),\n      \"]\"\n    )\n  );\n}, 1000 / 60);\n\nReactDOM.render(<App testString={testString} />, rootElement);\n"],"sourceRoot":""}